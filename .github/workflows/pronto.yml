name: Pronto

on:
  workflow_run:
    workflows: ["Specs"]
    types:
      - completed

jobs:
  pronto:
    runs-on: ubuntu-20.04
    if: >
      ${{ github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v2
      - name: 'Download artifact'
        uses: actions/github-script@v3
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "test_artifacts"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/test_artifacts.zip', Buffer.from(download.data));
      - run: unzip test_artifacts.zip
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.5
          bundler-cache: true
      - name: Cache gems
        id: cache-gems
        uses: actions/cache@v2
        with:
          path: gem_cache
          key: ${{ runner.os }}-gems
      - name: Install pronto
        env:
          GEM_HOME: gem_cache
          GEM_PATH: gem_cache
        run: gem install pronto
      - name: Run pronto
        env:
          GEM_HOME: gem_cache
          GEM_PATH: gem_cache
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH=$(pwd)/gem_cache/bin:$PATH
          hub pr checkout $(cat PULL_REQUEST_NUMBER)
          git fetch origin ${{ github.event.pull_request.base.ref }}
          PRONTO_PULL_REQUEST_ID=$(cat PULL_REQUEST_NUMBER) \
          PRONTO_GITHUB_ACCESS_TOKEN="${{ github.token }}" \
            pronto run -f github_status github_pr -c origin/${{ github.event.pull_request.base.ref }}
